name: Build Rust Cross Platform

on:
    workflow_call:

jobs:
    build_rust:
        name: Build for ${{ matrix.settings.os }} ${{ matrix.settings.target }}
        runs-on: ${{ matrix.settings.os }}
        strategy:
            fail-fast: false
            matrix:
                settings:
                    - os: macos-12
                      target: x86_64-apple-darwin
                    - os: macos-12
                      target: aarch64-apple-darwin
                    - os: windows-2022
                      target: x86_64-pc-windows-msvc
                    - os: ubuntu-22.04
                      target: x86_64-unknown-linux-gnu
                    - os: ubuntu-22.04
                      target: aarch64-unknown-linux-gnu
                    - os: ubuntu-22.04
                      target: aarch64-unknown-linux-musl
                    - os: ubuntu-22.04
                      target: x86_64-unknown-linux-musl

        steps:
            - name: Checkout
              uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

            - name: Install rust
              uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # stable
              with:
                  toolchain: stable

            - name: Cache cargo registry
              uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

            - name: Add build architecture
              run: rustup target add ${{ matrix.settings.target }}

            - name: Install cross-compilation tools for aarch64-gnu
              if: matrix.settings.target == 'aarch64-unknown-linux-gnu'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y gcc-aarch64-linux-gnu

            - uses: goto-bus-stop/setup-zig@7ab2955eb728f5440978d5824358023be3a2802d # v2.2.0
              if: ${{ contains(matrix.settings.target, 'musl') }}
              with:
                  version: 0.12.0

            - name: Install Zigbuild
              if: ${{ contains(matrix.settings.target, 'musl') }}
              run: cargo install cargo-zigbuild --locked --git https://github.com/rust-cross/cargo-zigbuild --rev 6f7e1336c9cd13cf1b3704f93c40fcf84caaed6b # 0.18.4

            - name: Add build architecture
              run: rustup target add ${{ matrix.settings.target }}

            - name: Build Rust for MUSL - ${{ matrix.settings.target }}
              if: ${{ contains(matrix.settings.target, 'musl') }}
              env:
                  RUSTFLAGS: "-D warnings  -C target-feature=-crt-static"
              run: cargo zigbuild -p infisical-c --target ${{ matrix.settings.target }} --release

            - name: Build Rust for Non-MUSL - ${{ matrix.settings.target }}
              if: ${{ !contains(matrix.settings.target, 'musl') }}
              env:
                  RUSTFLAGS: "-D warnings -C target-feature=-crt-static"
              run: cargo build -p infisical-c --target ${{ matrix.settings.target }} --release

            - name: Upload Artifact
              uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
              with:
                  name: libinfisical_c_files-${{ matrix.settings.target }}
                  path: | # .so for linux, .dll for windows, .dylib for darwin/macos
                      target/${{ matrix.settings.target }}/release/*infisical_c*.so
                      target/${{ matrix.settings.target }}/release/*infisical_c*.dll
                      target/${{ matrix.settings.target }}/release/*infisical_c*.dylib
